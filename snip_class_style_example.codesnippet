<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>snip_class_style_example</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>//Specify types for properties, variables, constants, argument declarations and other statements with a space after the colon but not before, e.g. x: Int, and Circle: Shape.
//Define multiple variables and structures on a single line if they share a common purpose / context.
//Indent getter and setter definitions and property observers.
//Don't add modifiers such as internal when they're already the default. Similarly, don't repeat the access modifier when overriding a method.
//Organize extra functionality (e.g. printing) in extensions.
//Hide non-shared, implementation details such as centerString inside the extension using private access control.

class Shape: NSObject{
}
class Circle: Shape {
    var x: Int
    var y: Int
    var radius: Double
    var diameter: Double {
        get {
            return radius * 2
        }
        set {
            radius = newValue / 2
        }
    }

    init(x: Int, y: Int, radius: Double) {
        self.x = x
        self.y = y
        self.radius = radius
    }

    convenience init(x: Int, y: Int, diameter: Double) {
        self.init(x: x, y: y, radius: diameter / 2)
    }

    func area() -&gt; Double {
        return Double.pi * radius * radius
    }
}


extension Circle {
    override var description: String {
        return "center = \(centerString) area = \(area())"
    }
    private var centerString: String {
        return "(\(x),\(y))"
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>DF59593E-3250-4E83-8567-141EC1CA8FF3</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>best practice class style</string>
	<key>IDECodeSnippetTitle</key>
	<string>Class Example</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
