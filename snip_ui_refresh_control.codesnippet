<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>snip_ui_refresh_control</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>// UIRefreshControl (pull to refresh)

@interface MyViewController ()
@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) UIRefreshControl *refreshControl;
@end
	<key>IDECodeSnippetIdentifier</key>
	<string>D0E1F2A3-B4C5-6D7E-8F9A-0B1C2D3E4F5A</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>UIRefreshControl (pull to refresh) for table and collection views</string>
	<key>IDECodeSnippetTitle</key>
	<string>UI Refresh Control</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>

@implementation MyViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    // Setup table view
    self.tableView = [[UITableView alloc] initWithFrame:self.view.bounds];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    [self.view addSubview:self.tableView];
    
    // Create refresh control
    self.refreshControl = [[UIRefreshControl alloc] init];
    
    // Customize appearance
    self.refreshControl.tintColor = [UIColor systemBlueColor];
    
    // Set attributed title
    NSDictionary *attributes = @{NSForegroundColorAttributeName: [UIColor systemBlueColor]};
    self.refreshControl.attributedTitle = [[NSAttributedString alloc] initWithString:@"Pull to refresh" attributes:attributes];
    
    // Add target-action
    [self.refreshControl addTarget:self
                            action:@selector(refreshData:)
                  forControlEvents:UIControlEventValueChanged];
    
    // Add to table view
    self.tableView.refreshControl = self.refreshControl;
}

- (void)refreshData:(UIRefreshControl *)sender {
    NSLog(@"Refreshing data...");
    
    // Simulate network request
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, 2 * NSEC_PER_SEC), dispatch_get_main_queue(), ^{
        // Reload data
        [self.tableView reloadData];
        
        // End refreshing
        [sender endRefreshing];
        
        // Update title
        NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
        formatter.dateFormat = @"MMM d, h:mm a";
        NSString *lastUpdate = [NSString stringWithFormat:@"Last updated: %@", [formatter stringFromDate:[NSDate date]]];
        sender.attributedTitle = [[NSAttributedString alloc] initWithString:lastUpdate];
    });
}

// Programmatically trigger refresh
- (void)triggerRefresh {
    [self.tableView setContentOffset:CGPointMake(0, -self.refreshControl.frame.size.height) animated:YES];
    [self.refreshControl beginRefreshing];
    [self refreshData:self.refreshControl];
}

@end