<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>snip_ui_page_control</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>// UIPageControl with UIScrollView for paging

@interface MyViewController () <UIScrollViewDelegate>
@property (nonatomic, strong) UIScrollView *scrollView;
@property (nonatomic, strong) UIPageControl *pageControl;
@property (nonatomic, strong) NSArray<UIColor *> *colors;
@end
	<key>IDECodeSnippetIdentifier</key>
	<string>E1F2A3B4-C5D6-7E8F-9A0B-1C2D3E4F5A6B</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>UIPageControl with UIScrollView for paging interface</string>
	<key>IDECodeSnippetTitle</key>
	<string>UI Page Control</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>

@implementation MyViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.colors = @[[UIColor redColor], [UIColor blueColor], [UIColor greenColor], [UIColor yellowColor]];
    
    // Create scroll view
    self.scrollView = [[UIScrollView alloc] initWithFrame:self.view.bounds];
    self.scrollView.delegate = self;
    self.scrollView.pagingEnabled = YES;
    self.scrollView.showsHorizontalScrollIndicator = NO;
    self.scrollView.contentSize = CGSizeMake(self.view.bounds.size.width * self.colors.count, self.view.bounds.size.height);
    [self.view addSubview:self.scrollView];
    
    // Add pages to scroll view
    for (NSInteger i = 0; i < self.colors.count; i++) {
        CGRect frame = CGRectMake(self.view.bounds.size.width * i, 0, self.view.bounds.size.width, self.view.bounds.size.height);
        UIView *pageView = [[UIView alloc] initWithFrame:frame];
        pageView.backgroundColor = self.colors[i];
        [self.scrollView addSubview:pageView];
    }
    
    // Create page control
    self.pageControl = [[UIPageControl alloc] initWithFrame:CGRectMake(0, self.view.bounds.size.height - 50, self.view.bounds.size.width, 50)];
    self.pageControl.numberOfPages = self.colors.count;
    self.pageControl.currentPage = 0;
    
    // Customize appearance
    self.pageControl.pageIndicatorTintColor = [UIColor lightGrayColor];
    self.pageControl.currentPageIndicatorTintColor = [UIColor blackColor];
    
    // iOS 14+ indicators
    if (@available(iOS 14.0, *)) {
        self.pageControl.backgroundStyle = UIPageControlBackgroundStyleAutomatic;
    }
    
    // Add target-action
    [self.pageControl addTarget:self
                         action:@selector(pageControlChanged:)
               forControlEvents:UIControlEventValueChanged];
    
    [self.view addSubview:self.pageControl];
}

#pragma mark - UIScrollViewDelegate

- (void)scrollViewDidScroll:(UIScrollView *)scrollView {
    CGFloat pageWidth = scrollView.frame.size.width;
    NSInteger page = (NSInteger)floor((scrollView.contentOffset.x - pageWidth / 2) / pageWidth) + 1;
    self.pageControl.currentPage = page;
}

#pragma mark - Actions

- (void)pageControlChanged:(UIPageControl *)sender {
    CGFloat x = sender.currentPage * self.scrollView.frame.size.width;
    [self.scrollView setContentOffset:CGPointMake(x, 0) animated:YES];
}

@end